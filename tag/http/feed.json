{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"http\" tag",
    "description": "🌸",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/course/Web-Application-Security/",
            "url": "http://example.com/course/Web-Application-Security/",
            "title": "Web Application Security",
            "date_published": "2024-10-30T11:17:47.000Z",
            "content_html": "<h1 id=\"Overall\" class=\"active\"><a class=\"anchor\"  href=\"#Overall\">#</a>Overall</h1>\n<ol>\n<li>Web Application Stack<br>\n<img data-src=\"https://img.picui.cn/free/2024/10/30/672216036891d.png\" alt=\"img\"></li>\n<li>OSI Network Protocol Stack<br>\nMore in Network System<br>\n<img data-src=\"https://img.picui.cn/free/2024/10/30/6722160374233.png\" alt=\"img\"></li>\n<li>Web Applications<br>\nSecurity problem is usually to do with dynamic creation of web contents<br>\n<img data-src=\"https://img.picui.cn/free/2024/10/30/672216b529859.png\" alt=\"img\"></li>\n</ol>\n<h1 id=\"HTTP\" class=\"active\"><a class=\"anchor\"  href=\"#HTTP\">#</a>HTTP</h1>\n<h2 id=\"HTTP\" class=\"active\"><a class=\"anchor\"  href=\"#HTTP\">#</a>HTTP</h2>\n<ol>\n<li>HyperText Transport Protocol (HTTP)<br>\nHTTP is a request/response protocol for communicating between web clients and web servers.<br>\nA web client sends a request to a particular web server for a particular resource (identified by a URL) and the web server responds with some kind of data (often HTML data)</li>\n<li>HTTP Request Messag</li>\n</ol>\n<ul>\n<li>Send TCP/IP message to <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5leGFtcGxlLmNvbQ==\">www.example.com</span> on port 80 containing the following:<br>\n<img data-src=\"https://img.picui.cn/free/2024/10/30/672217d602618.png\" alt=\"img\"></li>\n</ul>\n<ol start=\"3\">\n<li>HTTP Request Methods</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GET</td>\n<td>Retrieve information</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>Request some operation be performed</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>Provide new information</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>Request something be removed from server</td>\n</tr>\n<tr>\n<td>HEAD</td>\n<td>Same as GET except that only header info is returned</td>\n</tr>\n<tr>\n<td>OPTIONS</td>\n<td>Request information about communication options available</td>\n</tr>\n<tr>\n<td>TRACE</td>\n<td>Used for testing and diagnosing problems</td>\n</tr>\n<tr>\n<td>CONNECT</td>\n<td>Used for tunnelling using proxies</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"4\">\n<li>HTTP Response Message<br>\n<img data-src=\"https://img.picui.cn/free/2024/10/30/672217d60533f.png\" alt=\"img\"></li>\n<li>HTTP is a Stateless Protocol<br>\nHTTP is said to be a stateless protocol because each request is handled independently<br>\nAssumes no memory of requests that came before current request<br>\nIf a web server receives a number of HTTP requests from the same client, they are each handled by the server in exactly the same way as they would, had they been sent from different clients.</li>\n<li>HTML Forms: the GET Method<br>\nThe GET method sends encoded data appended to the URL string</li>\n</ol>\n<ul>\n<li>The data is separated from the URL by a ‘?’</li>\n<li>The encoded data and any path information are placed in the CGI environment variables  <code>QUERY_STRING</code>  and  <code>PATH_INFO</code></li>\n</ul>\n<ol start=\"7\">\n<li>HTML Forms: the Post Method<br>\nThe POST method sends encoded data in the body section of the request</li>\n</ol>\n<ul>\n<li>Data in the body is encoded in the same way as in the GET method</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Feature</th>\n<th>GET</th>\n<th>POST</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>用途</td>\n<td>通常用于信息检索，不会改变服务器状态</td>\n<td>提交数据进行处理，可能更新服务器或数据库状态</td>\n</tr>\n<tr>\n<td>可见性</td>\n<td>参数在 URL 中可见，易于调试</td>\n<td>参数隐藏在请求主体中</td>\n</tr>\n<tr>\n<td>安全性</td>\n<td>不适合提交密码等敏感信息</td>\n<td>不提供安全的隐私保护</td>\n</tr>\n<tr>\n<td>长度限制</td>\n<td>受 URL 最大字符长度限制</td>\n<td>受服务器可接受的数据量限制</td>\n</tr>\n<tr>\n<td>缓存性</td>\n<td>可以被缓存</td>\n<td>必须重新传输数据，且不会自动缓存</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"HTTP Sessions\" class=\"active\"><a class=\"anchor\"  href=\"#HTTP Sessions\">#</a>HTTP Sessions</h2>\n<ol>\n<li>HTTP Sessions<br>\nA sequence of requests and responses from one browser to one (or more) sites</li>\n</ol>\n<ul>\n<li>Session can be long or short\n<ul>\n<li>Google advertising tracking: 1+ years</li>\n<li>Google Mail login: 2 weeks</li>\n</ul>\n</li>\n<li>Authorise user once, and all subsequent requests are tied to user\n<ul>\n<li>Without session management, users would have to constantly reauthenticate</li>\n</ul>\n</li>\n<li>Web application environments (ASP, PHP, etc.) provide session tokens</li>\n</ul>\n<ol start=\"2\">\n<li>Session Tokens<br>\nIdentifying the specific session instance<br>\n<img data-src=\"https://img.picui.cn/free/2024/10/30/67221c58289ab.png\" alt=\"img\">\n<ol>\n<li>Session Tokens in URLs<br>\nThe session token is part of the URL and will be sent to the web server through HTTP GET requests</li>\n</ol>\n<ul>\n<li>E.g. <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5leGFtcGxlLmNvbS9idXkuYXNwP2FydGljbGU9Mjc3ODE7c2Vzc2lvbmlkPUlFNTU3OTkwMTU3OA==\">http://www.example.com/buy.asp?article=27781;sessionid=IE5579901578</span></li>\n<li>This mechanism works even in case of client security restrictions (e.g., no cookies are allowed)<br>\nProblems:</li>\n<li>All information contained in the URL might be stored in firewall or proxy log files\n<ul>\n<li>Could simply be printed out with the web page on a shared printer</li>\n</ul>\n</li>\n<li>The URL, including sensitive data, can be sent in the HTTP referrer field to other web servers</li>\n<li>Imply a high risk of sensitive session data being disclosed to unauthorised third parties</li>\n</ul>\n<ol start=\"2\">\n<li>HTML Forms with Hidden Fields<br>\nSession token and information can be included in hidden fields in a form<br>\nWorks even in case of user client security restrictions, e.g., no cookies or JavaScript<br>\nDoes not provide protection mechanisms such as session expiration<br>\nCannot last beyond a single interactive session</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight html\"><figcaption><span>OvO</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">FORM</span> <span class=\"attr\">METHOD</span>=<span class=\"string\">&quot;POST&quot;</span> <span class=\"attr\">ACTION</span>=<span class=\"string\">&quot;/cgi-bin/order_goods.pl&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">INPUT</span> <span class=\"attr\">TYPE</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">NAME</span>=<span class=\"string\">&quot;customerid&quot;</span> <span class=\"attr\">VALUE</span>=<span class=\"string\">&quot;0815&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">INPUT</span> <span class=\"attr\">TYPE</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">NAME</span>=<span class=\"string\">&quot;valid_order&quot;</span> <span class=\"attr\">VALUE</span>=<span class=\"string\">&quot;yes&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">INPUT</span> <span class=\"attr\">TYPE</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">NAME</span>=<span class=\"string\">&quot;productid&quot;</span> <span class=\"attr\">VALUE</span>=<span class=\"string\">&quot;4711&quot;</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">FORM</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<pre><code>3. HTTP Cookies\n</code></pre>\n<p>Can be set either using HTTP headers or JavaScript<br>\nAn extra response header is added as follows to save information to the client</p>\n<figure class=\"highlight http\"><figcaption><span>OvO</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Set-Cookie</span><span class=\"punctuation\">: </span>id=321328765; domain=.qut.edu.au; path=/cgi-bin</span><br></pre></td></tr></table></figure>\n<p>When a user sends an HTTP request for a URL for which the client machine<br>\nholds a cookie, an extra HTTP header is added to the client request every time</p>\n<figure class=\"highlight http\"><figcaption><span>OvO</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookie:id=321328765</span><br></pre></td></tr></table></figure>\n<p>Other attributes: Expires, Domain, HttpOnly, Path, Port, Secure<br>\n<img data-src=\"https://img.picui.cn/free/2024/10/30/672221a731746.png\" alt=\"img\"><br>\n3.  Session tokens Risk<br>\n1. Predictable Tokens<br>\n- Counter (Verizon Wireless)<br>\n- Weak MAC (WSJ)<br>\n- token = {userid,  MAC_k(userid) }<br>\n- Apache Tomcat<br>\n-  <code>generateSessionID()</code>  uses MD5 but with a weak pseudorandom number generator <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS9lbi11cy9yZXNlYXJjaC93cC1jb250ZW50L3VwbG9hZHMvMjAxNi8wMi9nbTA1LnBkZg==\">CT-RSA 2005</span><br>\n- PHP<br>\n-  <code>create_session_id</code>  uses weak pseudorandom number generator <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWNsaXN0cy5vcmcvZnVsbGRpc2Nsb3N1cmUvMjAxMC9NYXIvNTE5\">seclists.org</span><br>\n2. Cookie Theft<br>\n 一些网站仅加密登录过程，而不加密会话 Cookie，从而导致会话令牌容易被截获<br>\n Example 1: login over HTTPS, but subsequently use HTTP<br>\n- 在不安全的网络环境（如无线咖啡馆）中，Cookie 可能被窃取。<br>\n- Other reasons why session token sent in the clear<br>\n- HTTPS/HTTP mixed content pages at site<br>\n- Man-in-the-middle attacks on SSL<br>\n- <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlYnV0bGVyLmNvbS8yMDEwLzEwLzI0L2ZpcmVzaGVlcC8=\">Firesheep</span> Firefox extension performs this attack</p>\n<pre><code>Example 2: Cross-Site Scripting (XSS) attacks\n</code></pre>\n",
            "tags": [
                "software security",
                "HTTP",
                "OSI"
            ]
        }
    ]
}