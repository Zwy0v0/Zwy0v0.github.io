{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"osi\" tag",
    "description": "🌸",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/course/Lect01/",
            "url": "http://example.com/course/Lect01/",
            "title": "Lect01",
            "date_published": "2024-10-31T06:06:30.000Z",
            "content_html": "<h1 id=\"Peer-to-peer and client-server networks\" class=\"active\"><a class=\"anchor\"  href=\"#Peer-to-peer and client-server networks\">#</a>Peer-to-peer and client-server networks</h1>\n<h2 id=\"P2P\" class=\"active\"><a class=\"anchor\"  href=\"#P2P\">#</a>P2P</h2>\n<ul>\n<li>Peer-to-peer (P2P) Network Model 在对等网络模型中，网络中的每个设备（节点或主机）都负责管理自己的资源，包括控制访问权限和安全性管理。这种设置允许计算机在没有集中控制的情况下共享或限制资源。</li>\n<li>P2P 网络的主要特征：\n<ul>\n<li>无集中控制：每台计算机独立运行，并管理自己的设置。</li>\n<li>节点组成的逻辑组：网络由多台计算机构成的组，特点是：\n<ul>\n<li>可以共享资源（如文件、打印机等）</li>\n<li>基于用户权限限制资源访问</li>\n<li>独立管理各自的设置、资源和安全性</li>\n</ul>\n</li>\n<li>本地用户账户：每个用户在各自的计算机上拥有本地账户，权限和设置仅适用于该设备。</li>\n<li>互联网示例：互联网中的一些对等共享平台（如文件共享应用）使用此模型。</li>\n</ul>\n</li>\n<li>Advantages and disadvantages:\n<ul>\n<li>easy, simple</li>\n<li>not scalable, not necessarily secure, not practical for larges-scale networks</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Client-Server Network Model\" class=\"active\"><a class=\"anchor\"  href=\"#Client-Server Network Model\">#</a>Client-Server Network Model</h2>\n<ul>\n<li>在客户端 - 服务器网络模型中，有一个中心服务器管理网络资源，并控制客户端的网络访问。这种结构允许多个客户端通过服务器来请求访问资源。</li>\n<li>模型主要特点：\n<ul>\n<li>服务器：管理共享资源，并控制网络访问。</li>\n<li>多个客户端：每个客户端通过服务器请求网络访问或资源。客户端不直接与其他客户端共享资源，而是通过服务器间接共享资源。</li>\n</ul>\n</li>\n<li>Advantages relative to P2P networks:\n<ul>\n<li>More scalable</li>\n<li>Centrally controlled network access and network resources</li>\n<li>Central monitoring and management</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Client-Server Applications\" class=\"active\"><a class=\"anchor\"  href=\"#Client-Server Applications\">#</a>Client-Server Applications</h2>\n<ul>\n<li>Network Services are the resources a network makes available to its users\n<ul>\n<li>They include applications and data provided by the applications</li>\n</ul>\n</li>\n<li>In a client-server application\n<ul>\n<li>A server provide network resources to clients</li>\n<li>Clients request network resources from the server</li>\n</ul>\n</li>\n<li>Protocols are methods and rules for communication between networked devices\n<ul>\n<li>Two primary protocols:\n<ul>\n<li>TCP (Transmission Control Protocol), and</li>\n<li>IP (Internet Protocol)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Network hardware devices and physical topologies\" class=\"active\"><a class=\"anchor\"  href=\"#Network hardware devices and physical topologies\">#</a>Network hardware devices and physical topologies</h1>\n<ol>\n<li>Local Area Networks (LANs) and Hardware</li>\n</ol>\n<ul>\n<li>A LAN is usually for a workspace or asmall physical area\n<ul>\n<li>Such as a lab or a building</li>\n</ul>\n</li>\n<li>A LAN interconnects nodes via a device called switch</li>\n<li>Each device needs a Network Interface Card (NIC) to connect to the switch</li>\n</ul>\n<ol start=\"2\">\n<li>Start Topology or Bus Topology</li>\n</ol>\n<ul>\n<li>Physically, a LAN is interconnected with star topology\n<ul>\n<li>A switch in the central point to interconnect all other nodes</li>\n</ul>\n</li>\n<li>Logically, a LAN is interconnected with bus topology\n<ul>\n<li>All nodes access the network through the bus</li>\n</ul>\n</li>\n<li>Function of the switch\n<ul>\n<li>A switch receives incoming data from one of its ports and redirects the data to another port or multiple ports according to the intended destination of the data</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li>Daisy-chained switches in a LAN</li>\n</ol>\n<ul>\n<li>A LAN can have multiple switches</li>\n<li>Three switches daisy-chained together in a single line served as a bus physically and logically\n<ul>\n<li>However, each of the switches is connected to its nodes via star topology physically, thus making the overall star-bus physical topology</li>\n<li>A topological model combining several topological models is known as a hybrid topological model</li>\n</ul>\n</li>\n</ul>\n<ol start=\"4\">\n<li>Interconnection of LANs via Routers</li>\n</ol>\n<ul>\n<li>A router is a device that manages traffic between two or more LANs</li>\n<li>A router can be used in small home networks to connect home LAN to the internet\n<ul>\n<li>This is known as a SOHO (Small Office-Home Office) network</li>\n</ul>\n</li>\n<li>Difference between a router and a switch\n<ul>\n<li>A switch works on, and belongs to, its LAN</li>\n<li>A router is a gateway interconnecting and belonging to multiple LANs</li>\n</ul>\n</li>\n</ul>\n<ol start=\"5\">\n<li>MANs and WANs</li>\n</ol>\n<ul>\n<li>Metropolitan area network (MAN)—A group of connected LANs in the same geographical area\n<ul>\n<li>Also known as Campus Area Network (CAN)</li>\n</ul>\n</li>\n<li>Wide Area Network (WAN) – A group of LANs spreading over a wide geographical area\n<ul>\n<li>The Internet is he largest and most varied WAN</li>\n</ul>\n</li>\n<li>PAN (personal area network)— The smallest network\n<ul>\n<li>A network of personal devices such as your smartphone and your laptop</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"The ISO 7-layer Open-System-Interconnection (OSI) model\" class=\"active\"><a class=\"anchor\"  href=\"#The ISO 7-layer Open-System-Interconnection (OSI) model\">#</a>The ISO 7-layer Open-System-Interconnection (OSI) model</h1>\n<h2 id=\"Overall\" class=\"active\"><a class=\"anchor\"  href=\"#Overall\">#</a>Overall</h2>\n<ol>\n<li>The OSI model is a theoretical representation describing network communication between two nodes\n<ul>\n<li>Never implemented</li>\n<li>Hardware and software independent</li>\n<li>Each network communication process represented<br>\n<img data-src=\"https://img.picui.cn/free/2024/10/31/672332515b4e5.png\" alt=\"img\"></li>\n</ul>\n</li>\n<li>OSI and TCP/IP Models<br>\nTCP/IP 模型将应用层、表示层和会话层合并为一个单一的应用层，并将数据链路层和物理层合并为网络接入层</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>OSI Model</th>\n<th>TCP/IP Model</th>\n<th>Examples</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Application</td>\n<td>Application</td>\n<td>Telnet, FTP, DHCP, DNS, HTTP, SMTP</td>\n</tr>\n<tr>\n<td>Presentation</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Session</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Transport</td>\n<td>Transport</td>\n<td>TCP, UDP</td>\n</tr>\n<tr>\n<td>Network</td>\n<td>Internetwork</td>\n<td>ICMP, IP</td>\n</tr>\n<tr>\n<td>Data Link</td>\n<td>Network Access</td>\n<td>Ethernet, Wi-Fi, ARP</td>\n</tr>\n<tr>\n<td>Physical</td>\n<td></td>\n<td>Cables, Hubs, Switches</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"3\">\n<li>Functions of the 7 layers</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>OSI Model Layer</th>\n<th>Function</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Application (Layer 7)</td>\n<td>Provides interface between software applications and a network for interpreting applications’ requests and requirements</td>\n</tr>\n<tr>\n<td>Presentation (Layer 6)</td>\n<td>Allows hosts and applications to use a common language; performs data formatting, encryption, and compression</td>\n</tr>\n<tr>\n<td>Session (Layer 5)</td>\n<td>Establishes, maintains, and terminates user connections</td>\n</tr>\n<tr>\n<td>Transport (Layer 4)</td>\n<td>Ensures accurate delivery of data through flow control, segmentation and reassembly, error correction, and acknowledgment</td>\n</tr>\n<tr>\n<td>Network (Layer 3)</td>\n<td>Establishes network connections; translates network addresses into their physical counterparts and determines routing</td>\n</tr>\n<tr>\n<td>Data Link (Layer 2)</td>\n<td>Packages data in frames appropriate to network transmission method</td>\n</tr>\n<tr>\n<td>Physical (Layer 1)</td>\n<td>Manages signaling to and from physical network connections</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Functions of the 7 layers\" class=\"active\"><a class=\"anchor\"  href=\"#Functions of the 7 layers\">#</a>Functions of the 7 layers</h2>\n<ol>\n<li>Layer 7: Application Layer 应用层</li>\n</ol>\n<ul>\n<li>Layer 7 describes the interface between two applications on separate computers</li>\n<li>Layer 7 protocols are used by application programs to\n<ul>\n<li>Provide services to users, such as a browser and email client</li>\n<li>Provide services to the system for, e.g., management of networks and resources</li>\n</ul>\n</li>\n<li>Payload – data that is passed between applications (or utility programs) and the OS<br>\n<img data-src=\"https://img.picui.cn/free/2024/10/31/672336b510c89.png\" alt=\"img\"></li>\n</ul>\n<ol start=\"2\">\n<li>Layer 6 Presentation Layer 表示层</li>\n</ol>\n<ul>\n<li>Presentation layer—Responsible for reformatting, compressing, and/or encrypting data in a way that the receiving application can read</li>\n<li>Example:<br>\n⎻ An web browsing message can be encrypted at the Presentation layer by the browser or by the O S (Operating System)</li>\n</ul>\n<ol start=\"3\">\n<li>Layer 5: Session Layer 会话层</li>\n</ol>\n<ul>\n<li>Layer 5 describes how data between applications is synched and recovered if messages do not arrive intact at the receiving application</li>\n<li>The Application, Presentation, and Session layers are intertwined\n<ul>\n<li>Often difficult to distinguish between them</li>\n</ul>\n</li>\n<li>Most tasks are performed by the OS when an application makes an API call to the OS\n<ul>\n<li>Application programming interface (API) call is the method that an application uses when it makes a request of the OS<br>\n<img data-src=\"https://img.picui.cn/free/2024/10/31/672336b537ba9.png\" alt=\"img\"></li>\n</ul>\n</li>\n</ul>\n<ol start=\"4\">\n<li>Layer 4: Transport Layer 传输层</li>\n</ol>\n<ul>\n<li>Layer 4 is responsible for transporting Application layer payloads from one application to another</li>\n<li>Control information is put into a header, which is added to the payload\n<ul>\n<li>Known as encapsulation</li>\n</ul>\n</li>\n<li>The layer 4 header addresses the receiving application by a number called a port number</li>\n<li>Two main Transport layer protocols at Layer 4\n<ol>\n<li>TCP (Transmission Control Protocol)</li>\n</ol>\n<ul>\n<li>It makes a connection with the end host, checks whether data was received; called a connection-oriented protocol</li>\n<li>If a message is too long, TCP divides it into smaller ones called <strong>segments</strong></li>\n</ul>\n<ol start=\"2\">\n<li>UDP (User Datagram Protocol)</li>\n</ol>\n<ul>\n<li>It does not guarantee delivery by first connecting and checking whether data is received; called a connectionless protocol</li>\n<li>A message is called a <strong>datagram</strong><br>\n<img data-src=\"https://img.picui.cn/free/2024/10/31/672336b4c7bf0.png\" alt=\"img\"></li>\n</ul>\n</li>\n</ul>\n<ol start=\"5\">\n<li>Layer 3: Network Layer 网络层</li>\n</ol>\n<ul>\n<li>Layer 3 is responsible for moving messages from one node to another until they reach the destination host</li>\n<li>IP adds its own Network layer header to the segment or datagram\n<ul>\n<li>The entire Network layer message is called a packet</li>\n</ul>\n</li>\n<li>IP address—Assigned to each node on a network\n<ul>\n<li>Network layer uses it to uniquely identify each host</li>\n</ul>\n</li>\n<li>IP relies on several routing protocols to find the best route for a packet to take to reach destination\n<ul>\n<li>ICMP and ARP are examples\n<ul>\n<li>Note: ARP is not strictly a Layer 3 protocol. It works at Layer 2 but uses Layer 3 IP address information</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Network layer protocol will divide large packets into smaller <strong>packets</strong>\n<ul>\n<li>The process is known as fragmentation</li>\n</ul>\n</li>\n</ul>\n<ol start=\"6\">\n<li>Layer 2: Data Link Layer 数据链路层</li>\n</ol>\n<ul>\n<li>Layers 2 and 1 are responsible for interfacing with physical hardware on the local network\n<ul>\n<li>Protocols at these layers are programmed into firmware of a computer’s NIC and other hardware</li>\n</ul>\n</li>\n<li>The type of networking hardware or technology used on a network determines the Link Layer protocol used\n<ul>\n<li>Ethernet and Wi-Fi are examples</li>\n</ul>\n</li>\n<li>Layer2 puts control information in a Link layer header and at the end of the packet in a trailer\n<ul>\n<li>The data transmitted at the entire Link layer is called a <strong>frame</strong></li>\n</ul>\n</li>\n<li>MAC (Media Access Control) address—Hardware address of the source and destination NICs\n<ul>\n<li>Also called a physical address, hardware address, or Data Link layer address</li>\n<li>Embedded on every network adapter</li>\n<li>In a LAN, a node can be found through MAC address</li>\n</ul>\n</li>\n<li>Two Data Link Layer Sublayers\n<ol>\n<li>LLC (Logical Link Control) sublayer</li>\n</ol>\n<ul>\n<li>It provides common interface, reliability and flow control</li>\n</ul>\n<ol start=\"2\">\n<li>MAC (Media Access Control) sublayer</li>\n</ol>\n<ul>\n<li>It manages access to the physical medium</li>\n<li>It appends physical address of destination computer onto data frame</li>\n</ul>\n</li>\n</ul>\n<ol start=\"7\">\n<li>Layer 1: Physical Layer 物理层</li>\n</ol>\n<ul>\n<li>Layer 1 is the simplest layer and is responsible for sending bits via a wired or wireless transmission</li>\n<li><strong>Bits</strong> can be transmitted as:\n<ul>\n<li>Wavelengths in the air</li>\n<li>Voltage on a copper wire</li>\n<li>Light (via fiber-optic cabling)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"PDU\" class=\"active\"><a class=\"anchor\"  href=\"#PDU\">#</a>PDU</h2>\n<ol>\n<li>PDU: the name for a group of data bits as it moves from one layer to the next, and from one LAN to the next</li>\n</ol>\n<ul>\n<li>It is sometimes called a message or a transmission</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>OSI 层级</th>\n<th>常用名称</th>\n<th>技术性名称 (PDU)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>应用层 (Layer 7)</td>\n<td>数据或有效载荷（Payload）</td>\n<td>L7PDU</td>\n</tr>\n<tr>\n<td>表示层 (Layer 6)</td>\n<td>数据或有效载荷（Payload）</td>\n<td>L6PDU</td>\n</tr>\n<tr>\n<td>会话层 (Layer 5)</td>\n<td>数据或有效载荷（Payload）</td>\n<td>L5PDU</td>\n</tr>\n<tr>\n<td>传输层 (Layer 4)</td>\n<td>段（Segment, TCP）或数据报（Datagram, UDP）</td>\n<td>L4PDU</td>\n</tr>\n<tr>\n<td>网络层 (Layer 3)</td>\n<td>包（Packet）</td>\n<td>L3PDU</td>\n</tr>\n<tr>\n<td>数据链路层 (Layer 2)</td>\n<td>帧（Frame）</td>\n<td>L2PDU</td>\n</tr>\n<tr>\n<td>物理层 (Layer 1)</td>\n<td>比特（Bit）或传输单元</td>\n<td>L1PDU</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"2\">\n<li>Demonstration of PDU Names\n<ol>\n<li>Data transformation</li>\n</ol>\n<ul>\n<li>Original software application data differs from application layer NIC data\n<ul>\n<li>Information added at each layer</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li>Segments/datagrams</li>\n</ol>\n<ul>\n<li>Generated in Transport layer</li>\n<li>Unit of data resulting from subdividing larger Protocol Data Unit (PDU)</li>\n</ul>\n<ol start=\"3\">\n<li>Packets/datagrams</li>\n</ol>\n<ul>\n<li>Generated in Network layer</li>\n<li>Added logical addressing information added to segments</li>\n</ul>\n<ol start=\"4\">\n<li>Frames</li>\n</ol>\n<ul>\n<li>Generated in Data Link layer</li>\n<li>Added physical addressing and error-checking information to segments<br>\n<img data-src=\"https://img.picui.cn/free/2024/10/31/672336ba87f7d.png\" alt=\"img\"></li>\n</ul>\n</li>\n<li>Communication between two systems</li>\n</ol>\n<ul>\n<li>On data’s way down the protocol stack (model):\n<ul>\n<li>Data is divided into data units called protocol data units (PDU)</li>\n<li>Some layers add their own formatting to the PDU, which is called a header (encapsulation)</li>\n</ul>\n</li>\n<li>When data arrives at the receiving end, it is passed up the protocol stack:\n<ul>\n<li>At each layer, software reads its PDU data and strips its header information (called decapsulation) and passes the PDU to the next higher layer</li>\n<li>Packet leaves the Application layer in a format the receiving application can read<br>\n<img data-src=\"https://img.picui.cn/free/2024/10/31/672336b4d1ba7.png\" alt=\"img\"></li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "OSI",
                "TCP/IP",
                "network system"
            ]
        },
        {
            "id": "http://example.com/course/Web-Application-Security/",
            "url": "http://example.com/course/Web-Application-Security/",
            "title": "Web Application Security",
            "date_published": "2024-10-30T11:17:47.000Z",
            "content_html": "<h1 id=\"Overall\" class=\"active\"><a class=\"anchor\"  href=\"#Overall\">#</a>Overall</h1>\n<ol>\n<li>Web Application Stack<br>\n<img data-src=\"https://img.picui.cn/free/2024/10/30/672216036891d.png\" alt=\"img\"></li>\n<li>OSI Network Protocol Stack<br>\nMore in Network System<br>\n<img data-src=\"https://img.picui.cn/free/2024/10/30/6722160374233.png\" alt=\"img\"></li>\n<li>Web Applications<br>\nSecurity problem is usually to do with dynamic creation of web contents<br>\n<img data-src=\"https://img.picui.cn/free/2024/10/30/672216b529859.png\" alt=\"img\"></li>\n</ol>\n<h1 id=\"HTTP\" class=\"active\"><a class=\"anchor\"  href=\"#HTTP\">#</a>HTTP</h1>\n<h2 id=\"HTTP\" class=\"active\"><a class=\"anchor\"  href=\"#HTTP\">#</a>HTTP</h2>\n<ol>\n<li>HyperText Transport Protocol (HTTP)<br>\nHTTP is a request/response protocol for communicating between web clients and web servers.<br>\nA web client sends a request to a particular web server for a particular resource (identified by a URL) and the web server responds with some kind of data (often HTML data)</li>\n<li>HTTP Request Messag</li>\n</ol>\n<ul>\n<li>Send TCP/IP message to <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5leGFtcGxlLmNvbQ==\">www.example.com</span> on port 80 containing the following:<br>\n<img data-src=\"https://img.picui.cn/free/2024/10/30/672217d602618.png\" alt=\"img\"></li>\n</ul>\n<ol start=\"3\">\n<li>HTTP Request Methods</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GET</td>\n<td>Retrieve information</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>Request some operation be performed</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>Provide new information</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>Request something be removed from server</td>\n</tr>\n<tr>\n<td>HEAD</td>\n<td>Same as GET except that only header info is returned</td>\n</tr>\n<tr>\n<td>OPTIONS</td>\n<td>Request information about communication options available</td>\n</tr>\n<tr>\n<td>TRACE</td>\n<td>Used for testing and diagnosing problems</td>\n</tr>\n<tr>\n<td>CONNECT</td>\n<td>Used for tunnelling using proxies</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"4\">\n<li>HTTP Response Message<br>\n<img data-src=\"https://img.picui.cn/free/2024/10/30/672217d60533f.png\" alt=\"img\"></li>\n<li>HTTP is a Stateless Protocol<br>\nHTTP is said to be a stateless protocol because each request is handled independently<br>\nAssumes no memory of requests that came before current request<br>\nIf a web server receives a number of HTTP requests from the same client, they are each handled by the server in exactly the same way as they would, had they been sent from different clients.</li>\n<li>HTML Forms: the GET Method<br>\nThe GET method sends encoded data appended to the URL string</li>\n</ol>\n<ul>\n<li>The data is separated from the URL by a ‘?’</li>\n<li>The encoded data and any path information are placed in the CGI environment variables  <code>QUERY_STRING</code>  and  <code>PATH_INFO</code></li>\n</ul>\n<ol start=\"7\">\n<li>HTML Forms: the Post Method<br>\nThe POST method sends encoded data in the body section of the request</li>\n</ol>\n<ul>\n<li>Data in the body is encoded in the same way as in the GET method</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Feature</th>\n<th>GET</th>\n<th>POST</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>用途</td>\n<td>通常用于信息检索，不会改变服务器状态</td>\n<td>提交数据进行处理，可能更新服务器或数据库状态</td>\n</tr>\n<tr>\n<td>可见性</td>\n<td>参数在 URL 中可见，易于调试</td>\n<td>参数隐藏在请求主体中</td>\n</tr>\n<tr>\n<td>安全性</td>\n<td>不适合提交密码等敏感信息</td>\n<td>不提供安全的隐私保护</td>\n</tr>\n<tr>\n<td>长度限制</td>\n<td>受 URL 最大字符长度限制</td>\n<td>受服务器可接受的数据量限制</td>\n</tr>\n<tr>\n<td>缓存性</td>\n<td>可以被缓存</td>\n<td>必须重新传输数据，且不会自动缓存</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"HTTP Sessions\" class=\"active\"><a class=\"anchor\"  href=\"#HTTP Sessions\">#</a>HTTP Sessions</h2>\n<ol>\n<li>HTTP Sessions<br>\nA sequence of requests and responses from one browser to one (or more) sites</li>\n</ol>\n<ul>\n<li>Session can be long or short\n<ul>\n<li>Google advertising tracking: 1+ years</li>\n<li>Google Mail login: 2 weeks</li>\n</ul>\n</li>\n<li>Authorise user once, and all subsequent requests are tied to user\n<ul>\n<li>Without session management, users would have to constantly reauthenticate</li>\n</ul>\n</li>\n<li>Web application environments (ASP, PHP, etc.) provide session tokens</li>\n</ul>\n<ol start=\"2\">\n<li>Session Tokens<br>\nIdentifying the specific session instance<br>\n<img data-src=\"https://img.picui.cn/free/2024/10/30/67221c58289ab.png\" alt=\"img\">\n<ol>\n<li>Session Tokens in URLs<br>\nThe session token is part of the URL and will be sent to the web server through HTTP GET requests</li>\n</ol>\n<ul>\n<li>E.g. <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5leGFtcGxlLmNvbS9idXkuYXNwP2FydGljbGU9Mjc3ODE7c2Vzc2lvbmlkPUlFNTU3OTkwMTU3OA==\">http://www.example.com/buy.asp?article=27781;sessionid=IE5579901578</span></li>\n<li>This mechanism works even in case of client security restrictions (e.g., no cookies are allowed)<br>\nProblems:</li>\n<li>All information contained in the URL might be stored in firewall or proxy log files\n<ul>\n<li>Could simply be printed out with the web page on a shared printer</li>\n</ul>\n</li>\n<li>The URL, including sensitive data, can be sent in the HTTP referrer field to other web servers</li>\n<li>Imply a high risk of sensitive session data being disclosed to unauthorised third parties</li>\n</ul>\n<ol start=\"2\">\n<li>HTML Forms with Hidden Fields<br>\nSession token and information can be included in hidden fields in a form<br>\nWorks even in case of user client security restrictions, e.g., no cookies or JavaScript<br>\nDoes not provide protection mechanisms such as session expiration<br>\nCannot last beyond a single interactive session</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight html\"><figcaption><span>OvO</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">FORM</span> <span class=\"attr\">METHOD</span>=<span class=\"string\">&quot;POST&quot;</span> <span class=\"attr\">ACTION</span>=<span class=\"string\">&quot;/cgi-bin/order_goods.pl&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">INPUT</span> <span class=\"attr\">TYPE</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">NAME</span>=<span class=\"string\">&quot;customerid&quot;</span> <span class=\"attr\">VALUE</span>=<span class=\"string\">&quot;0815&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">INPUT</span> <span class=\"attr\">TYPE</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">NAME</span>=<span class=\"string\">&quot;valid_order&quot;</span> <span class=\"attr\">VALUE</span>=<span class=\"string\">&quot;yes&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">INPUT</span> <span class=\"attr\">TYPE</span>=<span class=\"string\">&quot;hidden&quot;</span> <span class=\"attr\">NAME</span>=<span class=\"string\">&quot;productid&quot;</span> <span class=\"attr\">VALUE</span>=<span class=\"string\">&quot;4711&quot;</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">FORM</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<pre><code>3. HTTP Cookies\n</code></pre>\n<p>Can be set either using HTTP headers or JavaScript<br>\nAn extra response header is added as follows to save information to the client</p>\n<figure class=\"highlight http\"><figcaption><span>OvO</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Set-Cookie</span><span class=\"punctuation\">: </span>id=321328765; domain=.qut.edu.au; path=/cgi-bin</span><br></pre></td></tr></table></figure>\n<p>When a user sends an HTTP request for a URL for which the client machine<br>\nholds a cookie, an extra HTTP header is added to the client request every time</p>\n<figure class=\"highlight http\"><figcaption><span>OvO</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookie:id=321328765</span><br></pre></td></tr></table></figure>\n<p>Other attributes: Expires, Domain, HttpOnly, Path, Port, Secure<br>\n<img data-src=\"https://img.picui.cn/free/2024/10/30/672221a731746.png\" alt=\"img\"><br>\n3.  Session tokens Risk<br>\n1. Predictable Tokens<br>\n- Counter (Verizon Wireless)<br>\n- Weak MAC (WSJ)<br>\n- token = {userid,  MAC_k(userid) }<br>\n- Apache Tomcat<br>\n-  <code>generateSessionID()</code>  uses MD5 but with a weak pseudorandom number generator <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS9lbi11cy9yZXNlYXJjaC93cC1jb250ZW50L3VwbG9hZHMvMjAxNi8wMi9nbTA1LnBkZg==\">CT-RSA 2005</span><br>\n- PHP<br>\n-  <code>create_session_id</code>  uses weak pseudorandom number generator <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWNsaXN0cy5vcmcvZnVsbGRpc2Nsb3N1cmUvMjAxMC9NYXIvNTE5\">seclists.org</span><br>\n2. Cookie Theft<br>\n 一些网站仅加密登录过程，而不加密会话 Cookie，从而导致会话令牌容易被截获<br>\n Example 1: login over HTTPS, but subsequently use HTTP<br>\n- 在不安全的网络环境（如无线咖啡馆）中，Cookie 可能被窃取。<br>\n- Other reasons why session token sent in the clear<br>\n- HTTPS/HTTP mixed content pages at site<br>\n- Man-in-the-middle attacks on SSL<br>\n- <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlYnV0bGVyLmNvbS8yMDEwLzEwLzI0L2ZpcmVzaGVlcC8=\">Firesheep</span> Firefox extension performs this attack</p>\n<pre><code>Example 2: Cross-Site Scripting (XSS) attacks\n</code></pre>\n",
            "tags": [
                "software security",
                "HTTP",
                "OSI"
            ]
        }
    ]
}