{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"tcp\" tag",
    "description": "🌸",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/course/Network-Security-Analysis/",
            "url": "http://example.com/course/Network-Security-Analysis/",
            "title": "Network Security Analysis",
            "date_published": "2024-11-04T12:02:06.000Z",
            "content_html": "<h1 id=\"Layer 3: Network\" class=\"active\"><a class=\"anchor\"  href=\"#Layer 3: Network\">#</a>Layer 3: Network</h1>\n\n<h2 id=\"IP\" class=\"active\"><a class=\"anchor\"  href=\"#IP\">#</a>IP</h2>\n\n<ol>\n<li>IP Protocol Features</li>\n</ol>\n<ul>\n<li>Best-effort delivery<ul>\n<li>IP routes and sends a packet to the destination. IP provides no guaranteed delivery of packets</li>\n<li>Packet loss is left to the higher layer protocols</li>\n<li>The network has variable delays, it is not guaranteed that the packets will be received in sequence.</li>\n</ul>\n</li>\n<li>Connection-less service<ul>\n<li>Each packet is individually addressed and routed, rather than in the setup a prearranged connection channel for data transmission</li>\n<li>It is possible that two packets from the same source take different paths to reach the destination.</li>\n</ul>\n</li>\n<li>Routing<ul>\n<li>Packets go through a series of routers before they reach the destination.</li>\n<li>At each node that the packet passes through, the node determines the next hop for the packet and routes it to the next hop.</li>\n</ul>\n</li>\n<li>Quality of Service (QoS) control<ul>\n<li>QoS optimizes the network by setting packet priorities (classification marking)</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li>IP Fragmentation<ol>\n<li>What is IP fragmentation?</li>\n</ol>\n<ul>\n<li>Fragmentation is necessary for data transmission, as every network has its maximum transmission unit (MTU), the largest number of bytes an individual packet can have on a particular network</li>\n<li>If a packet larger than the network’s MTU is being sent, it must be fragmented before transmission.</li>\n</ul>\n<ol start=\"2\">\n<li>Who assembles the fragmented packets?</li>\n</ol>\n<ul>\n<li>When the destination host receives IP fragments, it allocates memory in preparation for fragment reassembly.</li>\n</ul>\n</li>\n<li>IP Spoofing&#x2F;DoS</li>\n</ol>\n<ul>\n<li>An attacker can send packets&#x2F;datagrams from a false source address to disguise itself.</li>\n<li>Denial-of-service (DoS) attacks often use IP spoofing to overload networks and devices with packets that appear to be from legitimate source IP addresses.</li>\n</ul>\n<ol start=\"3\">\n<li>Issues with IPv4 Fragmentation<br>Fragmentation causes increase overhead in CPU and memory and slow down network performance.</li>\n</ol>\n<ul>\n<li>Intermediate router<ul>\n<li>Creates fragment headers</li>\n<li>Computes checksums</li>\n<li>Copies the original packet into the fragments</li>\n</ul>\n</li>\n<li>Receiving host<ul>\n<li>When reassembling the fragments the receiver must allocate memory for the arriving fragments and joint together fragments into one packet after all of the fragments are received</li>\n<li>If one fragment is dropped, the entire original packet must be resent.<ul>\n<li>The TTL time exceeded ICMP message (with Fragment reassembly timeout) is sent to the sender.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"ARP\" class=\"active\"><a class=\"anchor\"  href=\"#ARP\">#</a>ARP</h2>\n\n<ol>\n<li>ARP</li>\n</ol>\n<ul>\n<li>IP addresses are used for identifying destination devices across the Internet.</li>\n<li>MAC addresses are used for direct delivery within the same network.</li>\n<li>ARP is used to resolve a logical (IP) address of a target host to its physical (MAC) address in a local area network.</li>\n</ul>\n<ol start=\"2\">\n<li><p>ARP in Direct Delivery</p>\n<ol>\n<li>The sender A and receiver B are located at the same network.</li>\n</ol>\n<ul>\n<li>A requests for B’s MAC address.</li>\n<li>Once B’s MAC address is resolved, then the data can be delivered from A to B.<br><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/7638f7e29bc26dab.png\" alt=\"image\"></li>\n</ul>\n<ol start=\"2\">\n<li>The sender A and receiver B are not located at the same network.</li>\n</ol>\n<ul>\n<li>A requests for gateway’s MAC address. Once G’s MAC address is resolved, then A sends the data to G for data forwarding</li>\n<li>G requests B’s MAC address. Once B’s MAC address is resolved, then G forwards the data to B</li>\n<li>Two ARP processes involved</li>\n</ul>\n</li>\n</ol>\n<p><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/a066a6ee19686120.png\" alt=\"image\"></p>\n<pre><code>3. More ARP processes\n- A - G1     G1 - G2      G2 - G3      G3 - B\n</code></pre>\n<p><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/94a4b433ddf61059.png\" alt=\"image\"></p>\n<ol start=\"3\">\n<li>ARP Process- Request</li>\n</ol>\n<ul>\n<li>ARP is a two-step process: a request and a reply.</li>\n<li>Within a network, when a host (requester) – A, begins a conversation with a target host - B<ul>\n<li>A is aware of B’s IP address, but does not have the B’s MAC address. Thus A is unable to send a unicast frame to B.</li>\n<li>A sends an ARP broadcast frame to request B’s MAC address. Since it is a broadcast, all hosts on the network receives the ARP request.</li>\n<li>All hosts scan the content of the ARP request to determine if they are the intended target. The hosts which are not the intended target discard the broadcast frame.</li>\n</ul>\n</li>\n</ul>\n<ol start=\"4\">\n<li>ARP Process - Reply</li>\n</ol>\n<ul>\n<li>B is the target of the ARP Request. It sends an ARP Reply back to A.</li>\n<li>Since B knows who sent the initial ARP Request, it is able to send the ARP Response unicast, directly back to A</li>\n</ul>\n<ol start=\"5\">\n<li>ARP Poisoning</li>\n</ol>\n<ul>\n<li>ARP Poisoning is also known as ARP Spoofing.</li>\n<li>A type of attack carried out over a local area network (LAN).</li>\n<li>It involves sending malicious ARP packets on a LAN to change the mapping of the attacker’s<br>MAC address with the IP address of another host</li>\n<li>攻击过程<ul>\n<li>攻击者在局域网中发送伪造的ARP数据包，将目标IP地址映射到攻击者的MAC地址。</li>\n<li>这样，局域网中的其他主机在访问该IP地址时，流量会被引导到攻击者的设备上。</li>\n</ul>\n</li>\n<li>攻击目的<ol>\n<li>中间人攻击（Man-in-the-Middle, MITM）：</li>\n</ol>\n<ul>\n<li>攻击者可以截获、篡改或记录在受害者和目标主机之间传递的数据。</li>\n</ul>\n<ol start=\"2\">\n<li>拒绝服务攻击（DoS）：</li>\n</ol>\n<ul>\n<li>攻击者可以通过阻止合法主机的流量访问目标主机，实现拒绝服务。<br><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/1e55b1b5b0938dda.png\" alt=\"image\"></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"ICMP\" class=\"active\"><a class=\"anchor\"  href=\"#ICMP\">#</a>ICMP</h2>\n\n<ol>\n<li>ICMP Features</li>\n</ol>\n<ul>\n<li><p>ICMP is a supporting protocol to support IP.</p>\n</li>\n<li><p>ICMP messages are encapsulated inside of IP datagrams before going down to the data link layer<br><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/bd2c3965e1886840.png\" alt=\"image\"></p>\n</li>\n<li><p>Assists the diagnosis of some network problems, particularly related to the network layer of the OSI model</p>\n</li>\n<li><p>Assists in obtaining specific information from routers and the destination host</p>\n</li>\n<li><p>Is used by routers and hosts</p>\n</li>\n<li><p>Returns the message to the originator</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li>Types of ICMP</li>\n</ol>\n<ul>\n<li>ICMP messages can be broadly classified into 2 types:<ul>\n<li>Error reporting</li>\n<li>Query&#x2F;Reply</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li>Time-Exceeded(Error reporting)</li>\n</ol>\n<ul>\n<li>The ICMP Time Exceeded message is issued:<ul>\n<li>When a packet is sent, its TTL is decremented by 1 at each hop. If the TTL reaches 0, the packet is dropped and a Time-Exceeded message is sent to the originator.</li>\n<li>If destination does not receive all fragments in a set time, it drops any received fragments and sends a Time-Exceeded message to the originator</li>\n</ul>\n</li>\n</ul>\n<ol start=\"4\">\n<li>ICMP重定向（ICMP Redirect）</li>\n</ol>\n<ul>\n<li>场景设置<ul>\n<li>发送主机 A：IP地址为 10.0.0.100&#x2F;24。</li>\n<li>默认路由：A 的路由表中有一个默认路由条目，指向路由器 G1 的 IP 地址 10.0.0.1&#x2F;24 作为默认网关。</li>\n<li>路由器 G1：当需要转发到目标网络 X 时，G1 使用路由器 G2 的 IP 地址 10.0.0.2&#x2F;24 作为下一跳。</li>\n</ul>\n</li>\n<li>ICMP重定向过程<ul>\n<li>包到达路由器 G1：G1 收到来自主机 A（10.0.0.100）发送的一个数据包，目标是网络 X。</li>\n<li>路由表检查：G1 检查其路由表，发现下一跳是 G2（IP 地址 10.0.0.2），可以到达目标网络 X。</li>\n<li>ICMP重定向消息：如果 G2 和发送主机 A（10.0.0.100）在同一个网络（10.0.0.0&#x2F;24），G1 会向发送主机 A 发送一个 ICMP 重定向消息，建议 A 将去往网络 X 的流量直接发送到 G2，这样可以减少一个跳数，使流量更直接地到达目标网络。</li>\n<li>数据包转发：在发送重定向消息的同时，G1 仍会将接收到的数据包转发到 G2，确保当前数据包的传输不中断。<br><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/bbbcd5f2b66d5d73.png\" alt=\"image\"></li>\n</ul>\n</li>\n</ul>\n<ol start=\"5\">\n<li>Echo Request&#x2F;Reply</li>\n</ol>\n<ul>\n<li>A host or router that receives an echo-request message creates an echo-reply message and returns it to the originator</li>\n<li>echo-request and echo-reply messages can be used to help diagnose some network problems<ul>\n<li>e.g. communication status between two devices</li>\n</ul>\n</li>\n<li>Testing destination availability and providing status is achieved by invoking a ping command<ul>\n<li>Creates a series of echo-request and echo-reply messages providing statistical information</li>\n</ul>\n</li>\n</ul>\n<ol start=\"6\">\n<li>Ping（ICMP）泛洪DDoS攻击</li>\n</ol>\n<ul>\n<li>ICMP操作的类型：熟悉ICMP的各种操作类型（例如Echo请求&#x2F;回复）有助于识别网络通信中的正常行为和异常行为。</li>\n<li>正常的ICMP交互：了解ICMP在发起端与目标主机之间的正常交互方式，例如ping操作，能帮助区分合法通信和潜在的恶意流量。</li>\n<li>异常网络行为识别：当ICMP流量异常时（例如，持续的ping请求），可能意味着存在攻击行为，如DDoS攻击。</li>\n<li>Ping（ICMP）泛洪DDoS攻击<br>Ping泛洪是一种典型的DDoS（分布式拒绝服务）攻击，攻击者通过发送大量ICMP Echo请求，使目标主机过载，耗尽其资源，导致网络性能下降甚至服务中断。这种攻击利用了ICMP的易用性和资源开销低的特性，通过大量的无用流量使目标服务器无法响应正常请求。<br><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/7150028ff5a5d75b.png\" alt=\"image\"></li>\n</ul>\n<h1 id=\"Layer 4: Transport\" class=\"active\"><a class=\"anchor\"  href=\"#Layer 4: Transport\">#</a>Layer 4: Transport</h1>\n\n<h2 id=\"TCP\" class=\"active\"><a class=\"anchor\"  href=\"#TCP\">#</a>TCP</h2>\nTCP详细特征在 Layer-4-Transport-Protocols\n\n<p>对TCP的威胁：</p>\n<ol>\n<li>TCP序列号预测：</li>\n</ol>\n<ul>\n<li>攻击者可能能够猜测TCP分配给数据包流的序列号。</li>\n<li>如果攻击者成功预测了正在进行的通信会话的序列号，可以进行<strong>注入</strong>攻击，将篡改或伪造的数据插入数据流中，从而影响数据的完整性。</li>\n</ul>\n<ol start=\"2\">\n<li>SYN Flooding DoS攻击：</li>\n</ol>\n<ul>\n<li>SYN泛洪是一种拒绝服务（DoS）攻击，通过向服务器发送大量伪造的TCP SYN请求，占用服务器的资源。</li>\n<li>在SYN Flooding攻击中，攻击者连续发送SYN请求，服务器响应SYN-ACK，但攻击者不回复ACK确认，导致连接未完成并占用资源。</li>\n<li>这种攻击会使服务器资源耗尽，导致其无法响应合法用户的请求<br><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/66fe7ac2f80b1dd1.png\" alt=\"image\"></li>\n</ul>\n<h1 id=\"Layer 7: Application\" class=\"active\"><a class=\"anchor\"  href=\"#Layer 7: Application\">#</a>Layer 7: Application</h1>\n\n<h2 id=\"DHCP\" class=\"active\"><a class=\"anchor\"  href=\"#DHCP\">#</a>DHCP</h2>\n\n<ol>\n<li>DHCP Message Format<br><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/d8ed49e7d0fc10b8.png\" alt=\"image\"></li>\n<li>Threats to <ol>\n<li>DHCP - DHCP欺骗（DHCP Spoofing）</li>\n</ol>\n<ul>\n<li>DHCP欺骗是一种网络攻击，攻击者通过在网络中插入一个伪造的DHCP服务器来控制或截获网络流量。以下是攻击过程：<ol>\n<li>伪造的DHCP服务器：攻击者在网络中设置一个伪造的DHCP服务器，伪装成合法的DHCP服务器。</li>\n<li>响应DHCP请求：当客户端发送DHCP请求时，伪造的DHCP服务器会快速响应，试图将自己设为客户端的默认网关或DNS服务器。</li>\n<li>中间人攻击：通过设置默认网关或DNS，攻击者可以截获并控制客户端的网络流量，作为中间人，拦截用户与实际网关之间的数据。这样，攻击者可以监视、篡改或阻断用户的网络流量。</li>\n</ol>\n</li>\n</ul>\n</li>\n</ol>\n<p><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/3e9cd9116e8ed666.png\" alt=\"image\"><br>    2. DHCP耗尽攻击（DHCP Starvation Attack）<br>    - DHCP耗尽攻击是一种拒绝服务攻击，攻击者利用多个“从属主机”向DHCP服务器发送大量IP地址请求，直到耗尽服务器的地址池。以下是攻击的具体过程：<br>        1. 大量请求：攻击者通过从属主机或伪造的MAC地址向DHCP服务器不断请求新的IP地址。<br>        2. 地址池耗尽：随着大量虚假请求的积累，DHCP服务器的IP地址池逐渐被占满。<br>        3. 合法用户无法连接：由于服务器没有可分配的IP地址，合法客户端无法从DHCP服务器获得IP地址，从而无法连接到网络。<br><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/298943f7c02b1624.png\" alt=\"image\"></p>\n<h2 id=\"DNS\" class=\"active\"><a class=\"anchor\"  href=\"#DNS\">#</a>DNS</h2>\n\n<ol>\n<li>名称解析响应类型</li>\n</ol>\n<ul>\n<li>权威响应（Authoritative Response）：<ul>\n<li>这种响应来自于被查询域名的权威DNS服务器。</li>\n<li>权威响应表明该DNS服务器对该域的DNS记录拥有直接管理权限，因此返回的数据是准确和最新的。</li>\n</ul>\n</li>\n<li>非权威响应（Non-authoritative Response）：<ul>\n<li>这种响应并非来自被查询域名的权威DNS服务器，而是来自缓存服务器或中间服务器。</li>\n<li>非权威响应通常是其他DNS服务器缓存的数据，可能并非实时更新，但可以加速查询过程</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li>非权威响应示例</li>\n</ol>\n<ul>\n<li>首次查询<ol>\n<li>查询请求：客户端请求 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pYm0uY29tLw==\">www.ibm.com</span> 的IP地址。</li>\n<li>查询根服务器：本地DNS服务器向根服务器查询 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pYm0uY29tLw==\">www.ibm.com</span> 的地址。</li>\n<li>指向顶级域（TLD）服务器：根服务器返回可查询的 com 顶级域服务器列表。</li>\n<li>查询 com 顶级域服务器：本地DNS服务器向 com TLD服务器查询 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pYm0uY29tLi8=\">www.ibm.com。</span></li>\n<li>指向 ibm.com 的权威DNS服务器：com TLD 服务器提供 ibm.com 权威DNS服务器地址。</li>\n<li>查询 ibm.com 的DNS服务器：本地DNS服务器向 ibm.com 的DNS服务器请求IP地址。</li>\n<li>解析完成：ibm.com 的权威DNS服务器返回 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pYm0uY29tLw==\">www.ibm.com</span> 的IP地址 129.42.38.10。</li>\n<li>返回IP地址：本地DNS服务器将该IP地址返回给客户端。</li>\n</ol>\n</li>\n<li>缓存和非权威响应<ul>\n<li>本地DNS服务器会将查询结果缓存一段时间。</li>\n<li>如果在缓存有效期内再次请求 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pYm0uY29tLOacrOWcsGRuc+acjeWKoeWZqOebtOaOpeS7jue8k+WtmOS4rei/lOWbnmlw5Zyw5Z2ALOatpOaXtueahOWTjeW6lOWNs+S4uumdnuadg+WogeWTjeW6lC4v\">www.ibm.com，本地DNS服务器直接从缓存中返回IP地址，此时的响应即为非权威响应。</span></li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li>Vulnerabilities&#x2F;Threats in DNS</li>\n</ol>\n<ul>\n<li>DNS方案的基本漏洞：<ul>\n<li>缺乏身份验证：DNS没有内置的身份验证机制，使得攻击者更容易伪装。</li>\n<li>缺乏响应的真实性和完整性检查：DNS响应数据没有经过加密或验证，容易被篡改。</li>\n</ul>\n</li>\n<li>DNS缓存污染攻击（DNS Cache Poisoning）：<ul>\n<li>原理：攻击者更改DNS服务器或DNS缓存服务器上的记录，使网络流量从合法的服务器重定向到恶意网站。</li>\n<li>效果：用户无意间访问到钓鱼网站，可能泄露敏感信息。<br><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/2e4f0ec78949c3fe.png\" alt=\"image\"></li>\n</ul>\n</li>\n<li>DNS泛洪攻击（DNS Flood Attack）：<ul>\n<li>原理：利用DoS&#x2F;DDoS攻击，通过大量请求过载网络，耗尽网络容量和服务器资源。</li>\n<li>效果：合法用户无法访问DNS服务，导致网络中断。<br><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/6ed8673589f212d0.png\" alt=\"image\"></li>\n</ul>\n</li>\n<li>DNS欺骗（DNS Spoofing）：<ul>\n<li>原理：攻击者伪装成合法的DNS服务器，向客户端提供虚假的DNS响应。</li>\n<li>效果：用户可能被引导到虚假网站，面临数据泄露和安全威胁。<br><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/fc1bec998cfbdd83.png\" alt=\"image\"></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Summary\" class=\"active\"><a class=\"anchor\"  href=\"#Summary\">#</a>Summary</h1>\n\n<ol>\n<li><p>Summary - Protocol Threats</p>\n<table>\n<thead>\n<tr>\n<th>Protocol</th>\n<th>Threats</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>IP</td>\n<td>IP Spoofing attack 、 Fragmentation attack</td>\n</tr>\n<tr>\n<td>ARP</td>\n<td>ARP Cache-poisoning attack  、 MITM (Man-in-the-Middle) attack</td>\n</tr>\n<tr>\n<td>ICMP</td>\n<td>Redirect attack  、 Ping of death attack</td>\n</tr>\n<tr>\n<td>TCP</td>\n<td>Predicting TCP Sequences  、 TCP SYN Flood attack</td>\n</tr>\n<tr>\n<td>DHCP</td>\n<td>DHCP Spoofing  、 Starvation attack</td>\n</tr>\n<tr>\n<td>DNS</td>\n<td>DNS Cache Poisoning  、 DNS Flood attack  、 DNS Spoofing</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>Summary- Security attacks</p>\n</li>\n</ol>\n<ul>\n<li>Active attack<ul>\n<li>involves data modification or the creation of a false stream, e.g.<ul>\n<li>masquerade, replay, modification of messages, man-in-the-middle (MITM) and DoS&#x2F;DDoS</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Passive attack<ul>\n<li>attempts to learn or make use of information from the system but does not affect system resources, e.g. traffic analysis, release of information contents</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "network system",
                "IP",
                "DHCP",
                "ICMP",
                "ARP",
                "TCP",
                "DNS",
                "Network Security"
            ]
        },
        {
            "id": "http://example.com/course/Layer-4-Transport-Protocols-TCP-and-UDP/",
            "url": "http://example.com/course/Layer-4-Transport-Protocols-TCP-and-UDP/",
            "title": "Layer 4 - Transport Protocols TCP and UDP",
            "date_published": "2024-11-03T08:55:45.000Z",
            "content_html": "<h1 id=\"Layer 4\" class=\"active\"><a class=\"anchor\"  href=\"#Layer 4\">#</a>Layer 4</h1>\n\n<ol>\n<li><p>接收主机的解封装过程与连接设备<br><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/2e9e1d69eabb58ba.png\" alt=\"img\"></p>\n</li>\n<li><p>Role of Transport Layer</p>\n</li>\n</ol>\n<ul>\n<li>Role: to transport application-layer payloads from one application to another<ul>\n<li>Layer 4 establishes end-to-end connectivity</li>\n<li>Recall: Layer 3 performs end-to-end delivery of packets</li>\n</ul>\n</li>\n<li>Two main protocols:<ul>\n<li>Transmission Control Protocol (TCP): A connection-oriented protocol designed for reliable transfer of information</li>\n<li>User Datagram Protocol (UDP): A connectionless protocol designed for efficient communication of generally small smounts of data</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li>Segments and Datagrams</li>\n</ol>\n<ul>\n<li>Transport-layer protocols work with units of data called segments (TCP) or datagrams (UDP)</li>\n<li>Both TCP and UDP add a header to payload. This is known as encapsulation</li>\n<li>The Transport-layer protocol then passes the segment or datagram to the Internetwork protocol (IP)</li>\n<li>With incoming data, the Transport-layer receives the segment or datagram from the Internetwork protocol, processes it, decapsulates it and sends the resulting data up to the Application layer</li>\n</ul>\n<ol start=\"5\">\n<li>Identify Source&#x2F;Destination Processes&#x2F;Applications</li>\n</ol>\n<ul>\n<li>A <strong>port number</strong> is a way to identify a specific process&#x2F;application to which an Internet or other network message is to be forwarded when it arrives at a server. </li>\n<li>For TCP and UDP, a port number is a 16-bit integer that is put in the header appended to a message unit. <ul>\n<li>TCP and UDP use port numbers to specify the source and destination Application-layer protocols</li>\n</ul>\n</li>\n</ul>\n<ol start=\"6\">\n<li>Detect Data integrity with a Checksum mechanism</li>\n</ol>\n<ul>\n<li>To protect data integrity, TCP and UDP provide a checksum similar to a cyclic redundancy check (CRC). CRC is an error-detecting code  </li>\n<li>Intermediate nodes do NOT recalculate the checksum in the Transport layer. So if data corruption occurs during transmission, the final receiving host detects the checksum error and discards the data</li>\n</ul>\n<h1 id=\"TCP (Transmission Control Protocol)\" class=\"active\"><a class=\"anchor\"  href=\"#TCP (Transmission Control Protocol)\">#</a>TCP (Transmission Control Protocol)</h1>\n\n<h2 id=\"TCP\" class=\"active\"><a class=\"anchor\"  href=\"#TCP\">#</a>TCP</h2>\n\n<ol>\n<li>Characteristics of TCP</li>\n</ol>\n<ul>\n<li>Connection-oriented<ol>\n<li>TCP’s handshaking processes</li>\n</ol>\n<ul>\n<li>Before data transmission: It establishes a <strong>three-way handshake</strong> process with the destination, then data is transferred</li>\n<li>After data transmission:  The connection is terminated by a <strong>four-way handshake</strong> process</li>\n</ul>\n<ol start=\"2\">\n<li>TCP offers full-duplex service</li>\n</ol>\n<ul>\n<li>Data can be carried in both directions at the same time</li>\n</ul>\n<ol start=\"3\">\n<li>TCP segment format</li>\n</ol>\n<ul>\n<li>Encapsulated by IP packet in Network layer  becomes IP packet’s “data”</li>\n</ul>\n</li>\n<li>Sequencing and checksums—TCP sends a character string called a checksum that is checked by the destination host along with a sequence number for each segment</li>\n<li>Flow control—Gauges rate of transmission based on how quickly recipient can accept data</li>\n<li>重传机制Retry mechanism<ol>\n<li>确认机制：TCP 在数据传输过程中会使用 确认（ACK） 来通知发送方哪些数据包已成功到达接收方。每当接收方收到一个数据段时，它会向发送方发送一个确认消息，表示该数据段已成功接收。</li>\n<li>重传丢失的段：如果某个数据段在传输过程中丢失或损坏，接收方不会发送确认消息。TCP 会使用重传超时（retransmission timeout RTO）机制 来确保丢失的段得到重传。</li>\n<li>重传超时（RTO）机制：当 TCP 发送一个数据段时，会启动一个定时器。如果在设定的超时时间内没有收到该段的确认（ACK），则认为该数据段可能丢失，TCP 将会重传该数据段。定时器在接收到确认消息后停止，以防止不必要的重传。</li>\n</ol>\n</li>\n</ul>\n<ol start=\"2\">\n<li>Fields of a TCP Segment<br><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/9f400dd05957f1a3.png\" alt=\"img\"><br>An Example<br><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/fa75fbe787ff410b.png\" alt=\"img\"></li>\n</ol>\n<ul>\n<li>16-bit SOURCE field<ul>\n<li>Identifies the sending port</li>\n</ul>\n</li>\n<li>16-bit DESTINATION PORT field<ul>\n<li>Identifies the receiving port</li>\n</ul>\n</li>\n<li>32-bit SEQUENCE NUMBER field<ul>\n<li>Defines the  1st byte number of this datagram </li>\n<li>The numbering does not necessarily start from 0</li>\n</ul>\n</li>\n<li>32-bit ACKNOWLEDGEMENT NUMBER field<ul>\n<li>Indicates explicitly that a specific set of data received successfully </li>\n<li>Indicates the next byte expected sequence number from the other side of the communication</li>\n</ul>\n</li>\n<li>16-bit WINDOW field<ul>\n<li>Indicates the size of the TCP receiver buffer in bytes</li>\n</ul>\n</li>\n<li>CHECKSUM 16-bit checksum field: <ul>\n<li>For the integrity of the header and data</li>\n</ul>\n</li>\n<li>URGENT POINTER 16-bit field <ul>\n<li>It is used with the URGENT flag to point to the end of urgent data sent in a segment <table>\n<thead>\n<tr>\n<th>标志位</th>\n<th>说明</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>URG (U)</strong></td>\n<td>紧急指针</td>\n<td>通知接收方报文中某些数据是紧急的，需要优先处理，接收方会评估紧急指针</td>\n</tr>\n<tr>\n<td><strong>ACK (A)</strong></td>\n<td>确认</td>\n<td>表示发送该报文的设备请求确认接收，用于确认数据的接收</td>\n</tr>\n<tr>\n<td><strong>PSH (P)</strong></td>\n<td>推送</td>\n<td>请求立即发送数据，将缓冲区中的数据推送到接收端</td>\n</tr>\n<tr>\n<td><strong>RST (R)</strong></td>\n<td>复位</td>\n<td>重置连接，用于立即终止连接</td>\n</tr>\n<tr>\n<td><strong>SYN (S)</strong></td>\n<td>同步</td>\n<td>用于初始化连接，表明正在建立新的连接</td>\n</tr>\n<tr>\n<td><strong>FIN (F)</strong></td>\n<td>结束</td>\n<td>表示发送方已经没有更多的数据要发送，表示连接的结束</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"TCP Connection and Disconnection\" class=\"active\"><a class=\"anchor\"  href=\"#TCP Connection and Disconnection\">#</a>TCP Connection and Disconnection</h2>\nThree stages of a TCP connection:\n\n<ol>\n<li>Connection establishment with a 3-way handshake</li>\n</ol>\n<ul>\n<li>Three transmissions sent before data transmission:<ul>\n<li>Step 1 — (A → B) Request for a connection (SYN)</li>\n<li>Step 2 — (B → A) Response to the request (SYN&#x2F;ACK)</li>\n<li>Step 3 — (A → B) Connection established (ACK)</li>\n</ul>\n</li>\n<li>After the three initial messages, the payload or data is sent</li>\n<li>Sequence numbers will be increased by the number of bits included in each received segment<br>This confirms that the correct length of message was received<br><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/5e6910628ec58039.png\" alt=\"img\"></li>\n</ul>\n<ol start=\"2\">\n<li><p>Data transfer<br>Receipt of data must be acknowledged with an ACK that specifies the byte number that the receiver is expecting to receive from the sender<br><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/5bcef8a1b7ac03dc.png\" alt=\"img\"></p>\n</li>\n<li><p>Connection termination with a 4-way handshake</p>\n</li>\n</ol>\n<ul>\n<li>Four segments may need to be exchanged to terminate a TCP connection<ol>\n<li>Since a TCP connection is full-duplex, data may flow independently in each direction</li>\n<li>Each direction must be shut down independently </li>\n<li>Each half-close will require a FIN and ACK segments to be sent.<br><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/793afec4c1014846.png\" alt=\"img\"></li>\n</ol>\n</li>\n</ul>\n<ol start=\"4\">\n<li>summary</li>\n</ol>\n<ul>\n<li>TCP provides a connection mechanism for the application program<ul>\n<li>The client makes a connection with the server, i.e., <ul>\n<li>a virtual circuit connection is established before data is transferred</li>\n</ul>\n</li>\n<li>The client and server exchange data in both directions<ul>\n<li>Data is then streamed through this connection</li>\n</ul>\n</li>\n<li>Terminate the connection when the data transmission is done</li>\n</ul>\n</li>\n<li>TCP offers full-duplex service <ul>\n<li>Each TCP has a sending and receiving buffer and segments are sent in both direction</li>\n</ul>\n</li>\n<li>TCP provides reliable transmission via<ul>\n<li>Error control (checksum), flow control (sliding window protocol), and ACK&#x2F;Retry mechanism (Ack to sender for received packets, timeout, retransmission)</li>\n</ul>\n</li>\n</ul>\n<ol start=\"5\">\n<li>Process-to-Process Communications</li>\n</ol>\n<ul>\n<li>IP is for host-to-host communications</li>\n<li>TCP is for delivery of the message to the appropriate application program, i.e.,<br>process-to-process communications</li>\n<li>A computer may be running several programs at the same time <ul>\n<li>To make every connection unique, we need to use IP address and port number to establish a  unique identifier on a machine </li>\n<li>This is achieved through <strong>socket</strong></li>\n</ul>\n</li>\n</ul>\n<ol start=\"6\">\n<li>Socket Addresses – Unique Connections</li>\n</ol>\n<ul>\n<li>Every connection has 2 sockets or endpoints: <ul>\n<li>Source IP: Source port, \te.g., 131.181.143.129:2525</li>\n<li>Destination IP: Destination port, \te.g., 131.181.118.220: 80</li>\n</ul>\n</li>\n<li>The connection creates a unique virtual channel.<br><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/300ed231c5e2e1de.png\" alt=\"socket\"></li>\n</ul>\n<ol start=\"7\">\n<li>Sockets and Ports</li>\n</ol>\n<ul>\n<li>Port number range: 0 to 65535</li>\n<li>Three types<ol>\n<li>Well Known Ports</li>\n</ol>\n<ul>\n<li>Range: 0 to 1023</li>\n<li>Operating system or administrator use</li>\n</ul>\n<ol start=\"2\">\n<li>Registered Ports</li>\n</ol>\n<ul>\n<li>Range: 1024 to 49151</li>\n<li>Network users, processes with no special privileges</li>\n</ul>\n<ol start=\"3\">\n<li>Dynamic and&#x2F;or Private Ports</li>\n</ol>\n<ul>\n<li>Range: 49152 to 65535</li>\n<li>Normally for a client use</li>\n<li>No restrictions</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Port number</th>\n<th>Process name</th>\n<th>Protocol used</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>20</td>\n<td>FTP-DATA</td>\n<td>TCP</td>\n<td>File transfer—data</td>\n</tr>\n<tr>\n<td>21</td>\n<td>FTP</td>\n<td>TCP</td>\n<td>File transfer—control</td>\n</tr>\n<tr>\n<td>22</td>\n<td>SSH</td>\n<td>TCP</td>\n<td>Secure Shell</td>\n</tr>\n<tr>\n<td>23</td>\n<td>TELNET</td>\n<td>TCP</td>\n<td>Telnet</td>\n</tr>\n<tr>\n<td>25</td>\n<td>SMTP</td>\n<td>TCP</td>\n<td>Simple Mail Transfer Protocol</td>\n</tr>\n<tr>\n<td>53</td>\n<td>DNS</td>\n<td>TCP and UDP</td>\n<td>Domain Name System</td>\n</tr>\n<tr>\n<td>67 (client to server) and 68 (server to client)</td>\n<td>DHCPv4</td>\n<td>UDP</td>\n<td>Dynamic Host Configuration Protocol version 4</td>\n</tr>\n<tr>\n<td>69</td>\n<td>TFTP</td>\n<td>UDP</td>\n<td>Trivial File Transfer Protocol</td>\n</tr>\n<tr>\n<td>80</td>\n<td>HTTP</td>\n<td>TCP and UDP</td>\n<td>Hypertext Transfer Protocol</td>\n</tr>\n<tr>\n<td>110</td>\n<td>POP3</td>\n<td>TCP</td>\n<td>Post Office Protocol 3</td>\n</tr>\n<tr>\n<td>123</td>\n<td>NTP</td>\n<td>TCP</td>\n<td>Network Time Protocol</td>\n</tr>\n<tr>\n<td>143</td>\n<td>IMAP</td>\n<td>TCP</td>\n<td>Internet Message Access Protocol</td>\n</tr>\n<tr>\n<td>443</td>\n<td>HTTPS</td>\n<td>TCP</td>\n<td>Secure implementation of HTTP</td>\n</tr>\n<tr>\n<td>546 (client to server) and 547 (server to client)</td>\n<td>DHCPv6</td>\n<td>UDP</td>\n<td>Dynamic Host Configuration Protocol version 6</td>\n</tr>\n<tr>\n<td>3389</td>\n<td>RDP</td>\n<td>TCP</td>\n<td>Remote Desktop Protocol</td>\n</tr>\n</tbody></table>\n<h1 id=\"UDP (User Datagram Protocol)\" class=\"active\"><a class=\"anchor\"  href=\"#UDP (User Datagram Protocol)\">#</a>UDP (User Datagram Protocol)</h1>\n\n<ol>\n<li>UDP and its Features</li>\n</ol>\n<ul>\n<li>UDP is a Transport layer protocol</li>\n<li>It provides unreliable data delivery services<ul>\n<li>Connectionless transport service<ul>\n<li>No guarantee packets received at all</li>\n</ul>\n</li>\n<li>No error checking, no sequencing, no flow control<ul>\n<li>No assurance packets received correctly and in correct sequence</li>\n<li>Lower overhead than TCP</li>\n</ul>\n</li>\n<li>Lacks sophistication &#x3D; simple<ul>\n<li>More efficient than TCP</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Useful situations<ul>\n<li>Great volume of data transferred quickly, e.g., video streaming</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li>Format of UDP Messages</li>\n</ol>\n<ul>\n<li>Each UDP message is called a <strong>user datagram</strong></li>\n<li>Has a fixed size header of 8 bytes</li>\n<li>16 bit SOURCE &#x2F; DESTINATION PORT fields<ul>\n<li>Port number (between 0 and 65535)<ul>\n<li>Well-known ports 0 ~1023  </li>\n<li>Client host’s operating system may randomly choose a port  to communicate with a server</li>\n</ul>\n</li>\n<li>Checksum is optional for IPv4, but mandatory for IPv6<br><img data-src=\"https://cdn-fusion.imgcdn.store/i/2024/eaa62641752a90e7.png\" alt=\"UDPheader\"></li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li>Use</li>\n</ol>\n<ul>\n<li>UDP is used while error checking and correction are performed by the application, such as <ul>\n<li>Domain Name System (DNS)</li>\n<li>Dynamic Host Configuration Protocol (DHCP)</li>\n<li>Trivial File Transfer Protocol (TFTP)</li>\n<li>IPTV</li>\n<li>Voice over IP (VoIP)</li>\n<li>Real Time Streaming Protocol </li>\n<li>Routing Information Protocol (RIP)</li>\n<li>Simple Network Management Protocol (SNMP)</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "network system",
                "TCP",
                "UDP"
            ]
        }
    ]
}