<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title> • Posts by &#34;ipv6&#34; tag</title>
    <link href="http://example.com" />
    <updated>2024-11-06T08:25:04.000Z</updated>
    <category term="network system" />
    <category term="C" />
    <category term="software security" />
    <category term="AFL" />
    <category term="Linux" />
    <category term="C language" />
    <category term="vulnerability" />
    <category term="HTTP" />
    <category term="XSS" />
    <category term="CSRF" />
    <category term="WAN" />
    <category term="IPv6" />
    <category term="IP" />
    <category term="DHCP" />
    <category term="ICMP" />
    <category term="ARP" />
    <category term="router" />
    <category term="Supernet" />
    <category term="IPv4" />
    <category term="Subnet" />
    <category term="TCP" />
    <category term="UDP" />
    <category term="DNS" />
    <category term="SSH" />
    <category term="FTP" />
    <category term="SMTP" />
    <category term="OSI" />
    <category term="TCP/IP" />
    <category term="Network Security" />
    <category term="SQL" />
    <category term="Wi-Fi" />
    <category term="WLANs" />
    <category term="gdb" />
    <category term="Blog" />
    <category term="日常" />
    <category term="JavaScript" />
    <entry>
        <id>http://example.com/course/IoT/</id>
        <title>IoT</title>
        <link rel="alternate" href="http://example.com/course/IoT/"/>
        <content type="html">&lt;h1 id=&#34;Network Virtualization&#34; class=&#34;active&#34;&gt;&lt;a class=&#34;anchor&#34;  href=&#34;#Network Virtualization&#34;&gt;#&lt;/a&gt;Network Virtualization&lt;/h1&gt;
&lt;h2 id=&#34;Virtual Architecture&#34; class=&#34;active&#34;&gt;&lt;a class=&#34;anchor&#34;  href=&#34;#Virtual Architecture&#34;&gt;#&lt;/a&gt;Virtual Architecture&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;虚拟化架构概述&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;虚拟化 (Virtualization)：是某种事物的虚拟或逻辑版本，而非实际的物理版本。&lt;/li&gt;
&lt;li&gt;宿主机 (Host)：指托管虚拟机的物理计算机。&lt;/li&gt;
&lt;li&gt;来宾 (Guest)：指每个虚拟机 (VM)。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;虚拟化核心组件：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Hypervisor（管理程序）：创建并管理虚拟机，同时负责在宿主机与其来宾虚拟机之间分配和共享资源。&lt;/li&gt;
&lt;li&gt;Hypervisor 类型：
&lt;ul&gt;
&lt;li&gt;类型 1（Type 1）：直接安装在计算机上，没有依赖操作系统，被称为裸机管理程序。&lt;/li&gt;
&lt;li&gt;类型 2（Type 2）：作为应用程序安装在宿主操作系统中，被称为托管管理程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;虚拟机配置：&lt;br&gt;
- 虚拟机的软件和硬件特性在创建时由管理程序指定，可以根据需要进行自定义，包括：
&lt;ul&gt;
&lt;li&gt;安装的来宾操作系统&lt;/li&gt;
&lt;li&gt;分配的内存大小&lt;/li&gt;
&lt;li&gt;硬盘大小&lt;/li&gt;
&lt;li&gt;处理器类型等&lt;br&gt;
&lt;img data-src=&#34;https://cdn-fusion.imgcdn.store/i/2024/fd0d57f0e9890d92.png&#34; alt=&#34;image&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;Network Connection Types&#34; class=&#34;active&#34;&gt;&lt;a class=&#34;anchor&#34;  href=&#34;#Network Connection Types&#34;&gt;#&lt;/a&gt;Network Connection Types&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;网络连接类型概述&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;vNIC（虚拟网卡）：每个虚拟机 (VM) 都拥有自己的 vNIC，使其可以连接到其他机器；vNIC 工作在数据链路层。&lt;/li&gt;
&lt;li&gt;vNIC 数量：每个虚拟机可以拥有多个 vNIC，但最大数量取决于管理程序的限制。&lt;/li&gt;
&lt;li&gt;连接机制：
&lt;ul&gt;
&lt;li&gt;当为虚拟机选择 vNIC 时，管理程序会创建该虚拟机与宿主机之间的连接。&lt;/li&gt;
&lt;li&gt;这种连接可以被称为桥接 (bridge) 或虚拟交换机 (vSwitch)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;虚拟交换机 (vSwitch)：一个宿主机可以支持多个 vSwitch，这些 vSwitch 由管理程序控制。&lt;/li&gt;
&lt;li&gt;网络配置模式：vNIC 的配置方式决定了虚拟机是加入虚拟网络，还是尝试加入宿主机连接的物理局域网 (LAN)&lt;br&gt;
&lt;img data-src=&#34;https://cdn-fusion.imgcdn.store/i/2024/3ed47c20a495478f.png&#34; alt=&#34;image&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Bridged Mode&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;在桥接模式下，虚拟网卡 (vNIC) 使用主机的物理网卡 (NIC) 直接访问物理网络。&lt;/li&gt;
&lt;li&gt;虚拟机从物理网络上的 DHCP 服务器获取自己的 IP 地址、默认网关和子网掩码。&lt;/li&gt;
&lt;li&gt;对于网络中的其他节点而言，虚拟机就像是网络中的普通客户端或服务器。&lt;br&gt;
&lt;img data-src=&#34;https://cdn-fusion.imgcdn.store/i/2024/f7ea334b5d6cb4d8.png&#34; alt=&#34;image&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;NAT Mode&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;在 NAT 模式下，虚拟网卡 (vNIC) 依赖主机作为 NAT 设备来访问网络。&lt;/li&gt;
&lt;li&gt;虚拟机的 IP 地址信息是从主机获取的，主机的 Hypervisor 作为 DHCP 服务器提供地址分配。&lt;/li&gt;
&lt;li&gt;这种连接模式适用于不需要被其他网络节点通过已知地址访问的虚拟机。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Host-only Mode&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;在 Host-only 模式下，同一主机上的虚拟机可以与彼此以及主机交换数据。&lt;/li&gt;
&lt;li&gt;这些虚拟机无法与主机之外的节点进行通信。&lt;/li&gt;
&lt;li&gt;虚拟网卡 (vNIC) 不会通过主机的物理网卡 (NIC) 发送或接收数据。&lt;br&gt;
&lt;img data-src=&#34;https://cdn-fusion.imgcdn.store/i/2024/a6c11b2f0aa44aad.png&#34; alt=&#34;image&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Pros and Cons of Virtualization&#34; class=&#34;active&#34;&gt;&lt;a class=&#34;anchor&#34;  href=&#34;#Pros and Cons of Virtualization&#34;&gt;#&lt;/a&gt;Pros and Cons of Virtualization&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;优点：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;资源利用效率高：虚拟化允许多个虚拟机（VM）共享同一个物理服务器的资源，从而提高资源利用率。&lt;/li&gt;
&lt;li&gt;成本和能源节省：通过减少对多台物理服务器的需求，企业可以节省硬件成本、电力和冷却费用。&lt;/li&gt;
&lt;li&gt;故障和威胁隔离：每个虚拟机独立运行，因此影响一个虚拟机的故障或威胁不会波及其他虚拟机。&lt;/li&gt;
&lt;li&gt;简化备份、恢复和复制：虚拟化简化了备份和恢复流程，使得创建副本和数据恢复更为便捷。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;缺点：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;性能下降：与专用的物理机器相比，虚拟化环境会引入额外开销，导致性能下降。&lt;/li&gt;
&lt;li&gt;复杂性增加：管理虚拟化环境需要专业知识，会增加 IT 基础设施的复杂性。&lt;/li&gt;
&lt;li&gt;许可费用增加：虚拟化平台和客户操作系统实例的许可费用可能会导致更高的成本。&lt;/li&gt;
&lt;li&gt;单点故障：如果物理主机发生故障，所有在该主机上的虚拟机可能会受到影响，除非配置了冗余或故障转移解决方案。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Network Functions Virtualization&#34; class=&#34;active&#34;&gt;&lt;a class=&#34;anchor&#34;  href=&#34;#Network Functions Virtualization&#34;&gt;#&lt;/a&gt;Network Functions Virtualization&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;NFV（网络功能虚拟化）：是将物理和虚拟网络架构合并的过程。&lt;/li&gt;
&lt;li&gt;优点：提供灵活且节约成本的网络设备虚拟化选项。&lt;/li&gt;
&lt;li&gt;网络设备的虚拟化选项：
&lt;ul&gt;
&lt;li&gt;虚拟防火墙：将防火墙的操作系统安装在一台廉价服务器上的虚拟机中。&lt;/li&gt;
&lt;li&gt;虚拟路由器：将路由器的虚拟机安装在服务器上，取代传统昂贵的硬件路由器。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;虚拟化网络功能的优势：
&lt;ul&gt;
&lt;li&gt;快速迁移：在硬件故障或维护的情况下，虚拟设备可以快速且有时自动地从一台服务器迁移到另一台。&lt;/li&gt;
&lt;li&gt;资源利用效率更高：物理资源的分配和利用更为高效。&lt;/li&gt;
&lt;li&gt;服务易于扩展：能够根据网络需求的变化灵活调整服务规模&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Cloud Architecture&#34; class=&#34;active&#34;&gt;&lt;a class=&#34;anchor&#34;  href=&#34;#Cloud Architecture&#34;&gt;#&lt;/a&gt;Cloud Architecture&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;云计算：指通过网络灵活地向多个客户端提供数据存储、应用程序和服务的模式。&lt;/li&gt;
&lt;li&gt;云计算的特征包括：
&lt;ul&gt;
&lt;li&gt;按需服务：用户可以根据需求动态调整使用的服务。&lt;/li&gt;
&lt;li&gt;广泛的网络访问：通过互联网或其他网络广泛访问云资源。&lt;/li&gt;
&lt;li&gt;资源池化：将物理或虚拟资源集成在一起，按需分配给用户。&lt;/li&gt;
&lt;li&gt;计量服务：按使用量进行计费，确保用户只为实际使用的资源付费。&lt;/li&gt;
&lt;li&gt;快速弹性：存储容量可以迅速或自动地进行扩展或缩减，以适应需求的变化。&lt;br&gt;
&lt;img data-src=&#34;https://cdn-fusion.imgcdn.store/i/2024/7507bb3ce4dfd68e.png&#34; alt=&#34;image&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Cloud Service Models&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;本地部署 (On-premises)：所有硬件、软件及其他资源均位于组织所在地并由其管理。&lt;/li&gt;
&lt;li&gt;IaaS (Infrastructure as a Service 基础设施即服务)：虚拟提供硬件服务和网络基础设施设备，包含如 HVDs（托管虚拟桌面）等终端用户接口。&lt;/li&gt;
&lt;li&gt;PaaS (Platform as a Service 平台即服务)：提供操作系统、操作系统提供给应用程序的运行时库或模块，以及运行操作系统的硬件。&lt;/li&gt;
&lt;li&gt;SaaS (Software as a Service 软件即服务)：直接提供应用程序。&lt;/li&gt;
&lt;li&gt;XaaS (Anything as a Service 万物即服务)：根据客户的具体需求，云可以提供任何功能的组合。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;服务模型&lt;/th&gt;
&lt;th&gt;由用户提供&lt;/th&gt;
&lt;th&gt;由供应商提供&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;On-premises&lt;/td&gt;
&lt;td&gt;应用程序、数据存储、操作系统、虚拟化、服务器、存储、网络&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IaaS&lt;/td&gt;
&lt;td&gt;应用程序、数据存储、操作系统&lt;/td&gt;
&lt;td&gt;虚拟化、服务器、存储、网络&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PaaS&lt;/td&gt;
&lt;td&gt;应用程序、数据存储&lt;/td&gt;
&lt;td&gt;操作系统、虚拟化、服务器、存储、网络&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SaaS&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;应用程序、数据存储、操作系统、虚拟化、服务器、存储、网络&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Cloud Deployment Models 云部署模型&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;公有云 (Public cloud)：通过公共传输线路提供的服务。&lt;/li&gt;
&lt;li&gt;私有云 (Private cloud)：由组织在其自有数据中心的服务器上建立的服务。&lt;/li&gt;
&lt;li&gt;社区云 (Community cloud)：在多个组织之间共享的服务。&lt;/li&gt;
&lt;li&gt;混合云 (Hybrid cloud)：将多种服务模型组合到一个部署中。&lt;/li&gt;
&lt;li&gt;多云 (Multicloud)：在单一部署中组合了多种服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Orchestration and Automation&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;IaC（infrastructure as code 基础设施即代码）：IaC 是通过计算机可读的配置文件中使用文本命令来创建和管理云资源的过程。它允许对云资源的更改进行日志记录，使得基础设施管理更简单，并且可以进行版本控制。&lt;/li&gt;
&lt;li&gt;自动化 (Automation)：自动化是指计算机对特定事件的编程响应。通过编写脚本，某些任务可以在无需人工干预的情况下自动运行。&lt;/li&gt;
&lt;li&gt;编排 (Automation)：编排指的是将多个任务或工作流进行协调和自动化，以使它们协同工作，形成一个复杂的、统一的流程。随着越来越多的云维护和安全任务被转换为代码，编排能够帮助将复杂的过程整合成自动化工作流。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Connectivity and Security&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Potential risks and limitations include the following:
&lt;ul&gt;
&lt;li&gt;ISP outages&lt;/li&gt;
&lt;li&gt;ISP-imposed bandwidth limitations&lt;/li&gt;
&lt;li&gt;Cloud provider’s outages&lt;/li&gt;
&lt;li&gt;Cloud provider’s backup and security systems&lt;/li&gt;
&lt;li&gt;Misconfiguration that exposes one client’s data to another client&lt;/li&gt;
&lt;li&gt;Unauthorized access to data by cloud provider employees or illegitimate users&lt;/li&gt;
&lt;li&gt;Breaches of confidentiality&lt;/li&gt;
&lt;li&gt;Failure to comply with data security regulations&lt;/li&gt;
&lt;li&gt;Questions over ownership of intellectual property stored in the cloud&lt;/li&gt;
&lt;li&gt;Questions over data maintenance&lt;/li&gt;
&lt;li&gt;Risk to the network, proprietary data, or customer information caused by BYOC&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Way to reduce risks of cloud computing include the following:
&lt;ul&gt;
&lt;li&gt;Use encryption&lt;/li&gt;
&lt;li&gt;Carefully choose the method by which your network connects to your cloud resources&lt;/li&gt;
&lt;li&gt;Consider the following methods:
&lt;ul&gt;
&lt;li&gt;Internet&lt;/li&gt;
&lt;li&gt;VPN (virtual private network)&lt;/li&gt;
&lt;li&gt;Remote access connections&lt;/li&gt;
&lt;li&gt;Leased line&lt;/li&gt;
&lt;li&gt;Dedicated direct connection&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;IPv6&#34; class=&#34;active&#34;&gt;&lt;a class=&#34;anchor&#34;  href=&#34;#IPv6&#34;&gt;#&lt;/a&gt;IPv6&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Internet Protocol v6 (IPv6)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;IPv6 (RFC 2460)：下一代互联网协议&lt;/li&gt;
&lt;li&gt;完全重新设计 IP 地址体系&lt;/li&gt;
&lt;li&gt;分层的 128 位地址，具有独立的主机标识符&lt;/li&gt;
&lt;li&gt;无状态自动配置：无需手动配置即可自动生成地址&lt;/li&gt;
&lt;li&gt;简化路由和地址管理，提高网络效率&lt;/li&gt;
&lt;li&gt;尽管大部分流量尚未转换到 IPv6，但：
&lt;ul&gt;
&lt;li&gt;大多数 PC 操作系统已具备 IPv6 支持&lt;/li&gt;
&lt;li&gt;各国政府开始要求部署 IPv6&lt;/li&gt;
&lt;li&gt;大多数路由器已支持 IPv6&lt;br&gt;
&lt;img data-src=&#34;https://cdn-fusion.imgcdn.store/i/2024/e2016f84ba1bfc1f.png&#34; alt=&#34;image&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;IPv6 术语：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Link（链路）：也称为本地链路，是由路由器界定的任何局域网&lt;/li&gt;
&lt;li&gt;Neighbors（邻居）：同一链路上的两个或多个节点&lt;/li&gt;
&lt;li&gt;Dual stacked（双栈）：网络配置为同时使用 IPv4 和 IPv6&lt;/li&gt;
&lt;li&gt;Tunneling（隧道）：IPv6 使用的一种方法，通过 IPv4 网络传输 IPv6 数据包&lt;/li&gt;
&lt;li&gt;Interface ID（接口 ID）：IPv6 地址的最后 64 位或 4 组，用于标识接口&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;IPv6 地址类型&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;单播地址（Unicast address）：用于指定网络上的单个节点
&lt;ul&gt;
&lt;li&gt;全局地址（Global address）：可以在互联网上路由&lt;/li&gt;
&lt;li&gt;链路本地地址（Link local address）：用于与同一链路上的节点通信&lt;/li&gt;
&lt;li&gt;环回地址（Loopback address）：用于测试接口和支持协议栈的正常运行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;多播地址（Multicast address）：将数据包传递给网络上的所有节点&lt;/li&gt;
&lt;li&gt;任播地址（Anycast address）：可以标识多个目的地，数据包会传送到最近的目的地&lt;br&gt;
&lt;img data-src=&#34;https://cdn-fusion.imgcdn.store/i/2024/1234c8da95d92bdd.png&#34; alt=&#34;image&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;IPv6 autoconfiguration&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;IPv6 地址设计使得计算机可以自动配置其链路本地 IP 地址，这个过程被称为 SLAAC（无状态地址自动配置，Stateless Address Autoconfiguration）。&lt;/li&gt;
&lt;li&gt;步骤：
&lt;ul&gt;
&lt;li&gt;创建 IPv6 地址：计算机使用 FE80::/64 作为前 64 位（称为前缀），最后的 64 位通过网络适配器的 MAC 地址生成。&lt;/li&gt;
&lt;li&gt;检查唯一性：计算机检查其 IP 地址在网络中是否唯一。&lt;/li&gt;
&lt;li&gt;请求路由器配置信息：计算机发送一个称为 RS（路由器请求，Router Solicitation）的消息，询问网络中是否有路由器可以提供配置信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;IoT&#34; class=&#34;active&#34;&gt;&lt;a class=&#34;anchor&#34;  href=&#34;#IoT&#34;&gt;#&lt;/a&gt;IoT&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;物联网 (Internet of Things, IoT)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;概念：连接物理和数字领域，将日常物品转化为可感知、通信和处理数据的对象。&lt;/li&gt;
&lt;li&gt;别名：又称为网络物理系统（Cyber-Physical Systems）。&lt;br&gt;
核心构建模块：传感器网络。&lt;/li&gt;
&lt;li&gt;应用：在物联网中，传感器网络是关键，用于感知和收集周围环境的数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Smart Sensors and Sensor Networks&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;智能传感器和传感器网络概念，结合了以下三个主要要素：
&lt;ul&gt;
&lt;li&gt;感知 (Sensing)：传感器可以收集环境数据，比如交通流量、水位、温度等信息。&lt;/li&gt;
&lt;li&gt;网络 (Networking)：这些传感器设备通过网络互联，组成一个传感器网络，实现数据的实时传输和共享。&lt;/li&gt;
&lt;li&gt;计算 (Computation)：数据可以在网络中被处理、存储，甚至分析以提供有用的信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;应用领域
&lt;ul&gt;
&lt;li&gt;环境监测：用于交通、栖息地、污染、危险、和安全等领域的数据采集。&lt;/li&gt;
&lt;li&gt;工业监测：用于机器监控和诊断、电力和电信网格监控等。&lt;/li&gt;
&lt;li&gt;人本计算：构建智能化、关注人的空间和环境，比如智能家居和办公环境。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;不受限制的微型传感器可以放置在任何地方，检测从交通流量到温度的各种信息，逐渐发展为类似于地球神经系统的结构&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Building Blocks of IoT Applications&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;硬件
&lt;ul&gt;
&lt;li&gt;处理器：负责数据的处理和控制。&lt;/li&gt;
&lt;li&gt;无线电：提供无线通信功能，用于设备之间的数据传输。&lt;/li&gt;
&lt;li&gt;传感器：收集环境信息，如温度、湿度、光线等。&lt;/li&gt;
&lt;li&gt;执行器：用于执行特定的动作或响应，如打开 / 关闭设备。&lt;/li&gt;
&lt;li&gt;电池：为设备提供电力，使其可以独立工作。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;软件
&lt;ul&gt;
&lt;li&gt;操作系统：管理设备的硬件资源，提供系统基础服务。&lt;/li&gt;
&lt;li&gt;网络协议：支持设备之间的通信和数据传输。&lt;/li&gt;
&lt;li&gt;设备驱动程序：使操作系统和硬件组件之间能够进行通信。&lt;/li&gt;
&lt;li&gt;可视化：将数据转化为用户友好的图形界面，帮助用户理解数据。&lt;/li&gt;
&lt;li&gt;数据分析：处理和分析收集到的数据，得出有意义的见解。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;物联网（IoT）应用的五层 OSI 模型件：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;应用层（Application Layer）：代表常用的应用协议，如 MQTT 和 CoAP，用于数据的传递与通信。&lt;/li&gt;
&lt;li&gt;传输层（Transport Layer）：使用传输控制协议（TCP）和用户数据报协议（UDP）来保障数据的可靠传输。&lt;/li&gt;
&lt;li&gt;网络层（Network Layer）：RPL 协议常用，用于低功耗和有损网络中的路由。&lt;/li&gt;
&lt;li&gt;MAC 层（MAC Layer）：包括 TSCH、LoRaWAN 和 ZigBee 等协议，提供数据链路层的访问控制。&lt;/li&gt;
&lt;li&gt;物理层（PHY Layer）：标准如 IEEE 802.15.4、IEEE 802.11 和 LoRa 提供了物理连接规范。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;End-to-End Design&lt;br&gt;
 在物联网（IoT）部署中，计算、通信和传感是关键组成部分。为了设计有效的 IoT 系统，必须全面考虑以下问题：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;计算、传感和通信的内容：明确哪些数据需要被计算、感知和传输，以确保信息的准确性和相关性。&lt;/li&gt;
&lt;li&gt;计算的位置：决定计算是在本地（设备端）还是在云端完成。例如，是否需要在设备上实时处理数据，或是将数据发送到云端进行进一步分析。&lt;/li&gt;
&lt;li&gt;通信的频率：考虑通信的频率，频繁通信会消耗大量电池，因此需要在性能需求和电池寿命之间找到平衡点。&lt;/li&gt;
&lt;li&gt;管理和数据敏感性：
&lt;ul&gt;
&lt;li&gt;确定谁将负责管理 IoT 部署，确保系统的安全性和稳定性。&lt;/li&gt;
&lt;li&gt;检查应用中是否包含敏感信息，如果有，则需要考虑如何保护这些信息，以免泄露或被滥用。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="network system" />
        <category term="WAN" />
        <category term="IPv6" />
        <updated>2024-11-06T08:25:04.000Z</updated>
    </entry>
</feed>
